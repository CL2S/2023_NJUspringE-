{"remainingRequest":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\src\\commons\\SelectUser.vue?vue&type=template&id=089e7427&","dependencies":[{"path":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\src\\commons\\SelectUser.vue","mtime":1547344386000},{"path":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680832646317},{"path":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1680832641975},{"path":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680832646317},{"path":"E:\\2023春季课程\\大实验\\ElementVueSpringbootCodeTemplate-master\\WebProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1680832641838}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm._l(_vm.dynamicTags, function(tag) {\n        return _c(\n          \"el-tag\",\n          {\n            key: tag.id,\n            attrs: { closable: \"\", \"disable-transitions\": false },\n            on: {\n              close: function($event) {\n                _vm.handleClose(tag)\n              }\n            }\n          },\n          [_vm._v(\"\\n  \" + _vm._s(tag.nick) + \"\\n  \")]\n        )\n      }),\n      _vm.inputVisible\n        ? _c(\"el-autocomplete\", {\n            ref: \"saveTagInput\",\n            attrs: {\n              \"popper-class\": \"my-autocomplete\",\n              size: \"small\",\n              \"fetch-suggestions\": _vm.querySearchAsync,\n              placeholder: \"请输入内容\"\n            },\n            on: { select: _vm.handleSelect },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(props) {\n                  return [\n                    _c(\"span\", { staticClass: \"name\" }, [\n                      _vm._v(_vm._s(props.item.name))\n                    ]),\n                    _c(\"span\", { staticClass: \"addr\" }, [\n                      _vm._v(_vm._s(props.item.nick))\n                    ])\n                  ]\n                }\n              }\n            ]),\n            model: {\n              value: _vm.inputValue,\n              callback: function($$v) {\n                _vm.inputValue = $$v\n              },\n              expression: \"inputValue\"\n            }\n          })\n        : _c(\n            \"el-button\",\n            {\n              staticClass: \"button-new-tag\",\n              attrs: { size: \"small\" },\n              on: { click: _vm.showInput }\n            },\n            [_vm._v(\"+ New Tag\")]\n          )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}